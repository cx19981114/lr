<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lr.dao.customerMapper">
  <resultMap id="BaseResultMap" type="cn.lr.po.customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="habit" jdbcType="VARCHAR" property="habit" />
    <result column="plan" jdbcType="VARCHAR" property="plan" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="dateTime" jdbcType="VARCHAR" property="dateTime" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, sex, birth, phone, employeeId, habit, plan, note, money, dateTime, state, pic
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lr.po.customer" useGeneratedKeys="true" keyProperty="id">
    insert into tb_customer (id, name, sex, 
      birth, phone, employeeId, 
      habit, plan, note, 
      money, dateTime, state, pic
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birth,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER}, 
      #{habit,jdbcType=VARCHAR}, #{plan,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{money,jdbcType=INTEGER}, #{dateTime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
      #{pic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lr.po.customer" useGeneratedKeys="true" keyProperty="id">
    insert into tb_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="habit != null">
        habit,
      </if>
      <if test="plan != null">
        plan,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="habit != null">
        #{habit,jdbcType=VARCHAR},
      </if>
      <if test="plan != null">
        #{plan,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
       <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lr.po.customer">
    update tb_customer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="habit != null">
        habit = #{habit,jdbcType=VARCHAR},
      </if>
      <if test="plan != null">
        plan = #{plan,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lr.po.customer">
    update tb_customer
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      employeeId = #{employeeId,jdbcType=INTEGER},
      habit = #{habit,jdbcType=VARCHAR},
      plan = #{plan,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      dateTime = #{dateTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectByEmployeeId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} 
    and name like concat('%',#{search},'%') limit #{page},#{size}
  </select>
  <select id="selectByEmployeeIdCount"  resultType="Integer">
    select count(*)
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER}
    and name like concat('%',#{search},'%')
  </select>
   <select id="selectByEmployeeIdList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER}  
  </select>
  
   <select id="selectByEmployeeIdDay" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) limit #{page},#{size}
  </select>
  <select id="selectByEmployeeIdDayCount"  resultType="Integer">
    select count(*)
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and to_days(dateTime) = to_days(now())
  </select>
  
   <select id="selectByEmployeeIdMon" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and DATE_FORMAT( dateTime, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' ) limit #{page},#{size}
  </select>
  <select id="selectByEmployeeIdMonCount"  resultType="Integer">
    select count(*)
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and DATE_FORMAT( dateTime, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
  </select>
  
   <select id="selectByEmployeeIdQtr" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and QUARTER(dateTime)=QUARTER(now()) limit #{page},#{size}
  </select>
   <select id="selectByEmployeeIdQtrCount"  resultType="Integer">
    select count(*)
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state =  #{state,jdbcType=INTEGER} and QUARTER(dateTime)=QUARTER(now())
  </select>
  
   <select id="selectByEmployeeIdYear" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and YEAR(dateTime)=YEAR(NOW()) limit #{page},#{size}
  </select>
   <select id="selectByEmployeeIdYearCount"  resultType="Integer">
    select count(*)
    from tb_customer
    where employeeId = #{employeeId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} and YEAR(dateTime)=YEAR(NOW())
  </select>
</mapper>