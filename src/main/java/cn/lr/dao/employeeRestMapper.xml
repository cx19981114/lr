<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lr.dao.employeeRestMapper">
  <resultMap id="BaseResultMap" type="cn.lr.po.employeeRest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="dateTime" jdbcType="VARCHAR" property="dateTime" />
    <result column="schedule" jdbcType="INTEGER" property="schedule" />
    <result column="operatorId" jdbcType="INTEGER" property="operatorId" />
    <result column="operatorTime" jdbcType="VARCHAR" property="operatorTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employeeId, dateTime, schedule, operatorId, operatorTime,note, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeerest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_employeerest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lr.po.employeeRest" useGeneratedKeys="true" keyProperty="id">
    insert into tb_employeerest (id, employeeId, dateTime, 
      schedule, operatorId, operatorTime, note,
      state)
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{dateTime,jdbcType=VARCHAR}, 
      #{schedule,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, #{operatorTime,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR},#{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lr.po.employeeRest" useGeneratedKeys="true" keyProperty="id">
    insert into tb_employeerest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="schedule != null">
        schedule,
      </if>
      <if test="operatorId != null">
        operatorId,
      </if>
      <if test="operatorTime != null">
        operatorTime,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lr.po.employeeRest">
    update tb_employeerest
    <set>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="schedule != null">
        schedule = #{schedule,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        operatorId = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorTime != null">
        operatorTime = #{operatorTime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lr.po.employeeRest">
    update tb_employeerest
    set employeeId = #{employeeId,jdbcType=INTEGER},
      dateTime = #{dateTime,jdbcType=VARCHAR},
      schedule = #{schedule,jdbcType=INTEGER},
      operatorId = #{operatorId,jdbcType=INTEGER},
      operatorTime = #{operatorTime,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByEmployeeId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeerest
    where operatorId = #{employeeId,jdbcType=INTEGER} and state > #{state,jdbcType=INTEGER} and to_days(operatorTime) = to_days(now()) order by dateTime desc limit #{page},#{size}
  </select>
  <select id="selectByEmployeeIdCount"  resultType="Integer">
    select count(*)
    from tb_employeerest
    where operatorId = #{employeeId,jdbcType=INTEGER} and state > #{state,jdbcType=INTEGER} and to_days(operatorTime) = to_days(now())
  </select>
  <select id="selectByEmployeeList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeerest
    where 1 = 1
    <if test="employeeIdList != null">
    	and operatorId in
	    <foreach collection="employeeIdList" item="employeeId" open="(" close=")" index="index" separator=",">
	         #{employeeId,jdbcType=INTEGER}
	    </foreach>
    </if>
    and state >  #{stateSX,jdbcType=INTEGER} and state &lt; #{stateSB,jdbcType=INTEGER}  and to_days(operatorTime) = to_days(#{date,jdbcType=VARCHAR}) order by operatorTime desc
  </select>
  <select id="selectByEmployeeTeam" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeerest
    where 1 = 1
    <if test="employeeIdList != null">
    	and operatorId in
	    <foreach collection="employeeIdList" item="employeeId" open="(" close=")" index="index" separator=",">
	         #{employeeId,jdbcType=INTEGER}
	    </foreach>
    </if> 
    and state >  #{stateSX,jdbcType=INTEGER} and state &lt; #{stateSB,jdbcType=INTEGER} 
    and schedule in
   <foreach collection="type" item="item" open="(" close=")" index="index" separator=",">
        #{item,jdbcType=INTEGER}
   </foreach>
    and to_days(operatorTime) = to_days(#{date,jdbcType=VARCHAR}) order by operatorTime desc limit #{page},#{size}
  </select>
  <select id="selectByEmployeeTeamCount"  resultType="Integer">
    select count(*)
    from tb_employeerest
	where 1 = 1
    <if test="employeeIdList != null">
    	and operatorId in
	    <foreach collection="employeeIdList" item="employeeId" open="(" close=")" index="index" separator=",">
	         #{employeeId,jdbcType=INTEGER}
	    </foreach>
    </if> 
    and state >  #{stateSX,jdbcType=INTEGER} and state &lt; #{stateSB,jdbcType=INTEGER}
    and schedule in
   <foreach collection="type" item="item" open="(" close=")" index="index" separator=",">
        #{item,jdbcType=INTEGER}
   </foreach>
    and to_days(operatorTime) = to_days(#{date,jdbcType=VARCHAR})
  </select>
   <select id="selectByEmployeeIdNew" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeerest
    where operatorId = #{employeeId,jdbcType=INTEGER} and state >  #{stateSX,jdbcType=INTEGER} and state &lt; #{stateSB,jdbcType=INTEGER} and to_days(operatorTime) = to_days(#{date,jdbcType=VARCHAR}) 
  </select>
</mapper>