<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lr.dao.logMapper">
  <resultMap id="BaseResultMap" type="cn.lr.po.log">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="dateTime" jdbcType="TIMESTAMP" property="dateTime" />
    <result column="tbName" jdbcType="VARCHAR" property="tbName" />
    <result column="tbId" jdbcType="INTEGER" property="tbId" />
    <result column="operation" jdbcType="INTEGER" property="operation" />
    <result column="before" jdbcType="VARCHAR" property="before" />
    <result column="after" jdbcType="VARCHAR" property="after" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employeeId, dateTime, tbName, tbId, operation, before, after
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lr.po.log">
    insert into tb_log (id, employeeId, dateTime, 
      tbName, tbId, operation, 
      before, after)
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{dateTime,jdbcType=TIMESTAMP}, 
      #{tbName,jdbcType=VARCHAR}, #{tbId,jdbcType=INTEGER}, #{operation,jdbcType=INTEGER}, 
      #{before,jdbcType=VARCHAR}, #{after,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lr.po.log">
    insert into tb_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="tbName != null">
        tbName,
      </if>
      <if test="tbId != null">
        tbId,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="before != null">
        before,
      </if>
      <if test="after != null">
        after,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbName != null">
        #{tbName,jdbcType=VARCHAR},
      </if>
      <if test="tbId != null">
        #{tbId,jdbcType=INTEGER},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=INTEGER},
      </if>
      <if test="before != null">
        #{before,jdbcType=VARCHAR},
      </if>
      <if test="after != null">
        #{after,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lr.po.log">
    update tb_log
    <set>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbName != null">
        tbName = #{tbName,jdbcType=VARCHAR},
      </if>
      <if test="tbId != null">
        tbId = #{tbId,jdbcType=INTEGER},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=INTEGER},
      </if>
      <if test="before != null">
        before = #{before,jdbcType=VARCHAR},
      </if>
      <if test="after != null">
        after = #{after,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lr.po.log">
    update tb_log
    set employeeId = #{employeeId,jdbcType=INTEGER},
      dateTime = #{dateTime,jdbcType=TIMESTAMP},
      tbName = #{tbName,jdbcType=VARCHAR},
      tbId = #{tbId,jdbcType=INTEGER},
      operation = #{operation,jdbcType=INTEGER},
      before = #{before,jdbcType=VARCHAR},
      after = #{after,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>