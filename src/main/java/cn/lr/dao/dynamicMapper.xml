<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lr.dao.dynamicMapper">
  <resultMap id="BaseResultMap" type="cn.lr.po.dynamic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="dateTime" jdbcType="VARCHAR" property="dateTime" />
    <result column="tb_name" jdbcType="VARCHAR" property="tb_name" />
    <result column="tb_id" jdbcType="INTEGER" property="tb_id" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="checkId" jdbcType="INTEGER" property="checkId" />
    <result column="companyId" jdbcType="INTEGER" property="companyId" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <sql id="Base_Column_List">
    id, note, dateTime, tb_name, tb_id, employeeId, checkId, companyId, rank, state, pic
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_dynamic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lr.po.dynamic" useGeneratedKeys="true" keyProperty="id">
    insert into tb_dynamic (id, note, dateTime, 
      tb_name, tb_id, employeeId, 
      checkId,companyId, rank, state, pic)
    values (#{id,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{dateTime,jdbcType=VARCHAR}, 
      #{tb_name,jdbcType=VARCHAR}, #{tb_id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, 
      #{checkId,jdbcType=INTEGER}), #{companyId,jdbcType=INTEGER},#{rank,jdbcType=INTEGER}),
       #{state,jdbcType=INTEGER},#{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lr.po.dynamic" useGeneratedKeys="true" keyProperty="id">
    insert into tb_dynamic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="tb_name != null">
        tb_name,
      </if>
      <if test="tb_id != null">
        tb_id,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="checkId != null">
        checkId,
      </if>
      <if test="companyId != null">
        companyId,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="tb_name != null">
        #{tb_name,jdbcType=VARCHAR},
      </if>
      <if test="tb_id != null">
        #{tb_id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="checkId != null">
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lr.po.dynamic">
    update tb_dynamic
    <set>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="tb_name != null">
        tb_name = #{tb_name,jdbcType=VARCHAR},
      </if>
      <if test="tb_id != null">
        tb_id = #{tb_id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="checkId != null">
        checkId = #{checkId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        companyId = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lr.po.dynamic">
    update tb_dynamic
    set note = #{note,jdbcType=VARCHAR},
      dateTime = #{dateTime,jdbcType=VARCHAR},
      tb_name = #{tb_name,jdbcType=VARCHAR},
      tb_id = #{tb_id,jdbcType=INTEGER},
      employeeId = #{employeeId,jdbcType=INTEGER},
      checkId = #{checkId,jdbcType=INTEGER},
      companyId = #{companyId,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectByEmployeeId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where employeeId = #{employeeId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state > #{state,jdbcType=INTEGER} limit #{page},#{size}
  </select>
  <select id="selectByEmployeeCount"  resultType="Integer">
    select count(*)
    from tb_dynamic
    where employeeId = #{employeeId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state > #{state,jdbcType=INTEGER}
  </select>
   <select id="selectByCheckId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where checkId = #{checkId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state in(#{stateWSH,jdbcType=INTEGER},#{stateSHZ,jdbcType=INTEGER}) order by dateTime desc limit #{page},#{size}
  </select>
  <select id="selectByCheckCount"  resultType="Integer">
    select count(*)
    from tb_dynamic
    where checkId = #{checkId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state in(#{stateWSH,jdbcType=INTEGER},#{stateSHZ,jdbcType=INTEGER})
  </select>
   <select id="selectByAbnormal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where companyId = #{companyId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER} order by dateTime desc limit #{page},#{size}
  </select>
  <select id="selectByAbnormalCount"  resultType="Integer">
    select count(*)
    from tb_dynamic
    where companyId = #{companyId,jdbcType=INTEGER} and state = #{state,jdbcType=INTEGER}
  </select>
 	<!-- 查看今天公司所有员工的动态（申请列表）  -->
   <select id="selectByCompanyId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where companyId = #{companyId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state > #{state,jdbcType=INTEGER} order by dateTime desc limit #{page},#{size}
  </select>
  <select id="selectByCompanyCount"  resultType="Integer">
    select count(*)
    from tb_dynamic
    where companyId = #{companyId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state > #{state,jdbcType=INTEGER}
  </select>
  <select id="selectByTypeAndId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where tb_name = #{name,jdbcType=VARCHAR} and tb_id = #{id,jdbcType=INTEGER} and state > #{state,jdbcType=INTEGER}
  </select>
  <select id="selectByTypeAndIdVaild" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where tb_name = #{name,jdbcType=VARCHAR} and tb_id = #{id,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state > #{state,jdbcType=INTEGER} 
  </select>
  <select id="selectByTypeAndIdAndEmployeeId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where tb_name = #{name,jdbcType=VARCHAR} and tb_id = #{id,jdbcType=INTEGER} 
    and employeeId = #{employeeId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) and state > #{stateSX,jdbcType=INTEGER} and state &lt; #{stateSB,jdbcType=INTEGER}
  </select>
  <select id="selectByTypeAndEmployeeId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_dynamic
    where tb_name = #{name,jdbcType=VARCHAR} and employeeId = #{employeeId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) limit #{page},#{size}
  </select>
  <select id="selectByTypeAndEmployeeIdCount"  resultType="Integer">
    select count(*)
    from tb_dynamic
    where tb_name = #{name,jdbcType=VARCHAR} and employeeId = #{employeeId,jdbcType=INTEGER} and to_days(dateTime) = to_days(now()) 
  </select>
</mapper>