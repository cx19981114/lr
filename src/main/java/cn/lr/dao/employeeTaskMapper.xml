<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lr.dao.employeeTaskMapper">
  <resultMap id="BaseResultMap" type="cn.lr.po.employeeTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="taskId" jdbcType="INTEGER" property="taskId" />
    <result column="dateTime" jdbcType="VARCHAR" property="dateTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="pics" jdbcType="VARCHAR" property="pics" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employeeId, taskId, dateTime, note, pics, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeetask
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_employeetask
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lr.po.employeeTask"  useGeneratedKeys="true" keyProperty="id">
    insert into tb_employeetask (id, employeeId, taskId, 
      dateTime, note, pics, 
      state)
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{dateTime,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{pics,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lr.po.employeeTask"  useGeneratedKeys="true" keyProperty="id">
    insert into tb_employeetask
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="taskId != null">
        taskId,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="pics != null">
        pics,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="pics != null">
        #{pics,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lr.po.employeeTask">
    update tb_employeetask
    <set>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        taskId = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="pics != null">
        pics = #{pics,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lr.po.employeeTask">
    update tb_employeetask
    set employeeId = #{employeeId,jdbcType=INTEGER},
      taskId = #{taskId,jdbcType=INTEGER},
      dateTime = #{dateTime,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      pics = #{pics,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectByEmployeeId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeetask
    where employeeId = #{employeeId,jdbcType=INTEGER} 
     <if test="state != null">
    	and state not in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>  
    order by dateTime desc limit #{page},#{size}
  </select>
  <select id="selectByEmployeeIdCount"  resultType="Integer">
    select count(*)
    from tb_employeetask
    where employeeId = #{employeeId,jdbcType=INTEGER} 
     <if test="state != null">
    	and state not in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
  </select>
  <select id="selectByState" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employeetask
    where employeeId = #{employeeId,jdbcType=INTEGER} 
     <if test="state != null">
    	and state in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>  
    and to_days(now()) = to_days(dateTime)
  </select>
</mapper>