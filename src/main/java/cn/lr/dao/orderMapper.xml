<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lr.dao.orderMapper">
  <resultMap id="BaseResultMap" type="cn.lr.po.order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customerId" jdbcType="INTEGER" property="customerId" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="customerProjectId" jdbcType="INTEGER" property="customerProjectId" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="startTime" jdbcType="VARCHAR" property="startTime" />
    <result column="dateTime" jdbcType="VARCHAR" property="dateTime" />
    <result column="actStartTime" jdbcType="VARCHAR" property="actStartTime" />
    <result column="actEndTime" jdbcType="VARCHAR" property="actEndTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="projectNum" jdbcType="INTEGER" property="projectNum" />
    <result column="applyState" jdbcType="INTEGER" property="applyState" />
    <result column="orderState" jdbcType="INTEGER" property="orderState" />
    <result column="applyOrderState" jdbcType="INTEGER" property="applyOrderState" />
  </resultMap>
  <resultMap id="StatisticResultMap" type="cn.lr.po.statisticType">
    <result column="monDate" jdbcType="VARCHAR" property="monDate" />
    <result column="money" jdbcType="INTEGER" property="money" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customerId, employeeId, customerProjectId, projectId, date, startTime, dateTime, 
    actStartTime, actEndTime, note, evaluate, pic, projectNum, applyState, orderState,applyOrderState
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lr.po.order"  useGeneratedKeys="true" keyProperty="id">
    insert into tb_order (id, customerId, employeeId, 
      customerProjectId, projectId, date, startTime, 
      dateTime, actStartTime, 
      actEndTime, note, evaluate, 
      pic, projectNum, applyState, 
      orderState,applyOrderState)
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, 
      #{customerProjectId,jdbcType=INTEGER},#{projectId,jdbcType=INTEGER}, #{date,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, 
      #{dateTime,jdbcType=VARCHAR}, #{actStartTime,jdbcType=VARCHAR}, 
      #{actEndTime,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{evaluate,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{projectNum,jdbcType=INTEGER}, #{applyState,jdbcType=INTEGER}, 
      #{orderState,jdbcType=INTEGER}, #{applyOrderState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lr.po.order" useGeneratedKeys="true" keyProperty="id">
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customerId,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="customerProjectId != null">
        customerProjectId,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="startTime != null">
        startTime,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="actStartTime != null">
        actStartTime,
      </if>
      <if test="actEndTime != null">
        actEndTime,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="projectNum != null">
        projectNum,
      </if>
      <if test="applyState != null">
        applyState,
      </if>
      <if test="orderState != null">
        orderState,
      </if>
      <if test="applyOrderState != null">
        applyOrderState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="customerProjectId != null">
        #{customerProjectId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="actStartTime != null">
        #{actStartTime,jdbcType=VARCHAR},
      </if>
      <if test="actEndTime != null">
        #{actEndTime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="projectNum != null">
        #{projectNum,jdbcType=INTEGER},
      </if>
      <if test="applyState != null">
        #{applyState,jdbcType=INTEGER},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="applyOrderState != null">
        #{applyOrderState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lr.po.order">
    update tb_order
    <set>
      <if test="customerId != null">
        customerId = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="customerProjectId != null">
        customerProjectId = #{customerProjectId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        startTime = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="actStartTime != null">
        actStartTime = #{actStartTime,jdbcType=VARCHAR},
      </if>
      <if test="actEndTime != null">
        actEndTime = #{actEndTime,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="projectNum != null">
        projectNum = #{projectNum,jdbcType=INTEGER},
      </if>
      <if test="applyState != null">
        applyState = #{applyState,jdbcType=INTEGER},
      </if>
      <if test="orderState != null">
        orderState = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="applyOrderState != null">
        applyOrderState = #{applyOrderState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lr.po.order">
    update tb_order
    set customerId = #{customerId,jdbcType=INTEGER},
      employeeId = #{employeeId,jdbcType=INTEGER},
      customerProjectId = #{customerProjectId,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=INTEGER},
      date = #{date,jdbcType=VARCHAR},
      startTime = #{startTime,jdbcType=VARCHAR},
      dateTime = #{dateTime,jdbcType=VARCHAR},
      actStartTime = #{actStartTime,jdbcType=VARCHAR},
      actEndTime = #{actEndTime,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      evaluate = #{evaluate,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      projectNum = #{projectNum,jdbcType=INTEGER},
      applyState = #{applyState,jdbcType=INTEGER},
      orderState = #{orderState,jdbcType=INTEGER},
      applyOrderState = #{applyOrderState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByEmployeeCondition" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where 1=1
     <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>  
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    and date = #{date,jdbcType=VARCHAR} 
    <if test="startTime != null">
    and startTime = #{startTime,jdbcType=VARCHAR}
    </if>
    <if test="stateType != null">
    	and orderState in
	    <foreach collection="stateType" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    limit #{page},#{size}
  </select>
  <select id="selectByEmployeeConditionCount"  resultType="Integer">
    select count(*)
    from tb_order
    where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>  
   <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="startTime != null">
    and startTime = #{startTime,jdbcType=VARCHAR}
    </if>
    and date = #{date,jdbcType=VARCHAR} 
    <if test="stateType != null">
    	and orderState in
	    <foreach collection="stateType" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
  </select>
  <select id="selectByEmployeeConditionCount1"  resultType="Integer">
    select count(*)
    from tb_order
    where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
   <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
  and date = #{date,jdbcType=VARCHAR} 
    <if test="stateType != null">
    	and orderState in
	    <foreach collection="stateType" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
  </select>
   <select id="selectByEmployeeIdDate"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where employeeId = #{employeeId,jdbcType=INTEGER} 
      <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
      <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
     and to_days(date) = to_days(#{date,jdbcType=VARCHAR})
  </select>
  <select id="selectByEmployeeIdCount"  resultType="Integer">
    select count(*)
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    and to_days(date) = to_days(now())
  </select>
   <select id="selectByEmployeeIdHistory" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test = "date != null">
    	and dateTime like concat(#{date},'%')
    </if>
    order by date,startTime limit #{page},#{size}
  </select>
   <select id="selectByEmployeeIdHistoryCount" resultType="Integer">
    select count(*)
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test = "date != null">
    	and dateTime like concat(#{date},'%')
    </if>
  </select>
   <select id="selectByCustomerIdHistory" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where customerId = #{customerId,jdbcType=INTEGER} 
   <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test = "date != null">
    	and dateTime like concat(#{date},'%')
    </if>
    order by actStartTime desc limit #{page},#{size}
  </select>
   <select id="selectByCustomerIdHistoryCount" resultType="Integer">
    select count(*)
    from tb_order
    where customerId = #{customerId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test = "date != null">
    	and dateTime like concat(#{date},'%')
    </if>
  </select>
   <select id="selectByProjectIdHistory" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where customerProjectId = #{customerProjectId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    order by date,startTime 
  </select>
  <select id="selectByProjectCount"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>  
     and to_days(date) = to_days(now())  group by projectId
  </select>
  <select id="selectByProjectDayCount"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    and date = #{date,jdbcType=VARCHAR}  group by projectId
  </select>
  <select id="selectByProjectMonCount"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     and DATE_FORMAT( date, '%Y%m' ) = DATE_FORMAT( #{date,jdbcType=VARCHAR} , '%Y%m' )  group by projectId
  </select>
  <select id="selectByProjectYearCount"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     and YEAR(date)=YEAR(#{date,jdbcType=VARCHAR})  group by projectId
  </select>
  <select id="selectByProjectDay"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
     and date = #{date,jdbcType=VARCHAR}  and projectId = #{projectId,jdbcType=INTEGER}
  </select>
  <select id="selectByProjectMon"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     and DATE_FORMAT( date, '%Y%m' ) = DATE_FORMAT( #{date,jdbcType=VARCHAR} , '%Y%m' ) and projectId = #{projectId,jdbcType=INTEGER}
  </select>
  <select id="selectByProjectYear"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     and YEAR(date)=YEAR(#{date,jdbcType=VARCHAR}) and projectId = #{projectId,jdbcType=INTEGER}
  </select>
  <select id="selectByProjectAllCount"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    group by projectId
  </select>
  <select id="selectByProjectAll"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
     where 1=1
    <if test="employeeId != null">
    	and employeeId in
	    <foreach collection="employeeId" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
     and projectId = #{projectId,jdbcType=INTEGER}
  </select>
   <select id="selectByEmployeeCXApply"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
  </select>
  <select id="selectByEmployeeCXOrder"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER}
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
  </select>
  <select id="selectByEmployeeCXOrderApply"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="applyOrderState != null">
    	and applyOrderState in
	    <foreach collection="applyOrderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
	 </if>
  </select>
   <select id="selectByEmployeeOrder"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    and to_days(date) = to_days(#{date,jdbcType=VARCHAR}) 
  </select>
  <select id="selectByEmployeeStateApply"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    and to_days(date) - to_days(#{date,jdbcType=VARCHAR}) &lt;= 1
  </select>
 
  <select id="selectByEmployeeFinishState"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="state != null">
    	and applyOrderState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    and to_days(date) - to_days(now()) &lt;= 1
  </select>
  
   
  <select id="selectByProject"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
   <if test="state != null">
    	and applyState not in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
    and customerProjectId = #{customerProjectId,jdbcType=INTEGER}
  </select>
   <select id="selectByEmployee"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
    <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    order by dateTime desc limit #{page},#{size}
  </select>
  <select id="selectByEmployeeCount"  resultType="Integer">
    select count(*)
    from tb_order
    where employeeId = #{employeeId,jdbcType=INTEGER} 
     <if test="state != null">
    	and applyState in
	    <foreach collection="state" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if>
  </select>
   <select id="selectByCustomerHistory"  resultMap="StatisticResultMap">
  select date_format(dateTime ,'%Y-%m') as monDate,count(*) as money
  from tb_order 
  where customerId = #{customerId,jdbcType=INTEGER}
   <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
   <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    group by date_format(dateTime ,'%Y-%m')
  </select>
   <select id="selectByEmployeeHistory"  resultMap="StatisticResultMap">
  select date_format(dateTime ,'%Y-%m') as monDate,count(*) as money
  from tb_order 
  where employeeId = #{employeeId,jdbcType=INTEGER}
   <if test="applyState != null">
    	and applyState in
	    <foreach collection="applyState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    <if test="orderState != null">
    	and orderState in
	    <foreach collection="orderState" item="item" open="(" close=")" index="index" separator=",">
	         #{item,jdbcType=INTEGER}
	    </foreach>
    </if> 
    group by date_format(dateTime ,'%Y-%m')
  </select>
</mapper>